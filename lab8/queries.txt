0.
    ./mongoimport -d 'cs572' -c 'restaurants' /Users/didu/Downloads/restaurants.json

1.
    db.restaurants.find().pretty()    // pretty() diplays docs in object notation format

2.
    db.restaurants.find({}, {restaurant_id:1, name:1, district:1, cuisine:1})

3.
    db.restaurants.find({}, {_id:0, restaurant_id:1, name:1, district:1, cuisine:1})

4.
    db.restaurants.find({}, {_id:0, restaurant_id:1, name:1,district:1, 'address.zipcode':1} )

5.
    db.restaurants.find({district:'Bronx'})

6.
    db.restaurants.find({district:'Bronx'}).limit(5)

7.
    db.restaurants.find({district:'Bronx'}).skip(5).limit(5)
8.
    db.restaurants.find({'address.coord': {$lt: -95.754168}})

9.
    db.restaurants.find({'grades.score': {$gt: 70}, 'address.coord': {$lt: -65.754168}, cuisine: {$ne: 'American '}})

10.
    //both will produce the same result
    db.restaurants.find({name: {$regex: '^Wil'}}, {_id:0, restaurant_id:1, name:1, district:1, cuisine:1})
    db.restaurants.find({name: {$regex: '^Wil'}}, {_id:0, grades:0, address:0})    

11.
    db.restaurants.find({name: {$regex: 'ces$'}}, {_id:0, grades:0, address:0})

12.
    db.restaurants.find({name: {$regex: 'Reg'}}, {_id:0, grades:0, address:0})

13.
    db.restaurants.find({district: {$eq: 'Bronx'}, cuisine: {$in: ['American ', 'Chinese']}})

14.
    db.restaurants.find({district: {$in: ['Staten Island', 'Queens', 'Bronx', 'Brooklyn']}}, {_id:0, grades:0, address:0})

15.
    db.restaurants.find({district: {$nin: ['Staten Island', 'Queens', 'Bronx', 'Brooklyn']}}, {_id:0, grades:0, address:0})

16.
    db.restaurants.find({'grades.score': {$lt: 10}}, {_id:0, grades:0, address:0})

17.
    db.restaurants.find({'address.coord.1': {$gt: 42, $lte: 52}}, {_id:0, restaurant_id:1, name: 1, address:1})

18.
    db.restaurants.find().sort({name: 1})

19.
    db.restaurants.find().sort({name: -1})

20.
    db.restaurants.find().sort({cuisine: 1, district: -1})

21.
    db.restaurants.find({'address.street': {$exists: false}})

22.
    // both queries will produce the same resutl double = 1, string = 2 .....
    db.restaurants.find({'address.coord': {$type: 'double'}})
    db.restaurants.find({'address.coord': {$type: 1}})

23.
    db.restaurants.find({name: {$regex: '^Mad'}}, {_id:0, 'address.coord':1, name:1, district:1, cuisine:1})




